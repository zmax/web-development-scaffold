{
  "compilerOptions": {
    // --- 輸出設定 (Output Configuration) ---
    "declaration": true, // 關鍵設定：產生 .d.ts 型別定義檔，供其他套件使用。
    "declarationMap": true, // 為型別定義檔產生 sourcemap，改善 IDE 中的「跳至定義」功能。
    "outDir": "./dist", // 指定編譯後檔案的輸出目錄。
    "rootDir": "./src", // 指定原始碼的根目錄。
    "sourceMap": true, // 產生 .js.map 檔案，方便偵錯。
    // --- 模組與互通性設定 (Module & Interop Settings) ---
    "esModuleInterop": true, // 啟用與 CommonJS 模組的相容性。
    "module": "ESNext", // 使用現代模組格式。
    "moduleResolution": "bundler", // 採用與 Vite 等現代打包工具一致的模組解析策略。
    "resolveJsonModule": true,
    "isolatedModules": true, // 確保每個檔案都可以被獨立轉譯。
    // --- 語言與環境 (Language & Environment) ---
    "jsx": "react-jsx", // 使用 React 17+ 的新 JSX 轉換。
    "lib": ["ES2022", "DOM", "DOM.Iterable"],
    "target": "ES2022",
    // --- 嚴格度與程式碼品質 (Strictness & Quality) ---
    "strict": true, // 啟用所有嚴格的型別檢查選項。
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noFallthroughCasesInSwitch": true,
    "skipLibCheck": true // 跳過對所有相依性套件的型別檢查。
  },
  "include": ["src"], // 指定要納入編譯的檔案。
  "exclude": ["node_modules", "dist", "**/*.test.tsx"], // 指定要從編譯中排除的檔案。
  "references": [
    // 告知 tsc --build，此專案依賴於 @axiom/utils。
    {
      "path": "../utils"
    }
  ]
}
